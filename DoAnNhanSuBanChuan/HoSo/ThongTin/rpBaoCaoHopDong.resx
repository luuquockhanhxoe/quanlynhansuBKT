<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>